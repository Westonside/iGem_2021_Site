const scroll = (callback) => {
    //have this fire 60 times per second which is more efficent than the scroll listeners
    window.setTimeout(callback, 1000 / 60);
};

const callagain = () => {
    document.querySelectorAll('.member_container').forEach(member => {
        if (elementSeen(member)) {
            //if the member can be seen in the current viewport
            member.classList.add('seen');
        }
        else {
            //remove the seen class if not seen
            member.classList.remove('seen');
        }
    });
    //trigger again
    scroll(callagain);
}


//code found on stackoverflow
const elementSeen = (member) => {
    var rect = member.getBoundingClientRect();
    return (
        (rect.top <= 0
            && rect.bottom >= 0)
        ||
        (rect.bottom >= (window.innerHeight || document.documentElement.clientHeight) &&
            rect.top <= (window.innerHeight || document.documentElement.clientHeight)) || (rect.top >= 0 && rect.bottom <= (window.innerHeight ||
                document.documentElement.clientHeight))
    )
        
        //get the member_text then find the height of the text box inside that
        var inside = member.children[1].getBoundingClientRect();
        setInterval(()=>{console.log(inside,'something')},1000);
        
        var rect     = member.getBoundingClientRect(),
        vWidth   = window.innerWidth || document.documentElement.clientWidth,
        vHeight  = window.innerHeight || document.documentElement.clientHeight,
        efp      = function (x, y) { return document.elementFromPoint(x, y) };     

    // Return false if it's not in the viewport
    if (rect.right < 0 || (rect.bottom -100) < 0 
            || rect.left > vWidth || (rect.top + 130) > vHeight)
        return false;

    // Return true if any of its four corners are visible
    return (
          member.contains(efp(rect.left,  rect.top))
      ||  member.contains(efp(rect.right, rect.top))
      ||  member.contains(efp(rect.right, rect.bottom))
      ||  member.contains(efp(rect.left,  rect.bottom))
    );
    
}

document.addEventListener('DOMContentLoaded', () => {
    callagain();
});